@title Categories
@katex
(\DeclareMathOperator{obj}{obj}\
\DeclareMathOperator{arr}{arr}\
\DeclareMathOperator{dom}{dom}\
\DeclareMathOperator{cod}{cod})
@h1 Categories
@h2 Definition
A category \(K\) is a collection of objects \[O = obj K\] and arrows \[A = arr K\] with the following
data:
<ol>
<li>Each arrow \(f\in A\) has a specified domain object \(dom f = D\in O\) and codomain object
\(cod f = C\in O\) which is noted by stating \[f:D\rightarrow C\]</li>
<li>if \(f:A\rightarrow B\) and \(g:B\rightarrow C\) then there is a designated
composite arrow \[h:A\rightarrow C = f \cdot g = g \circ f\]
</li>
<li>Given an object \(A\) there is a designated identity arrow \[1_A:A\rightarrow A\]</li>
</ol>
Satisfying the following laws:
<ol>
<li>Identity Law: If \(f:A\rightarrow B\) then \[f \cdot 1_B = f\] and \[ 1_A \cdot f = f\]</li>
<li>Associative Law: If \(f:A\rightarrow B\), \(g:B\rightarrow C\) and \(h:C\rightarrow D\) then
\[
f\cdot (g \cdot h) = (f \cdot g) \cdot h : A \rightarrow D
\]
</ol>
Note that \(g \circ f = f \cdot g\), the LHS is the usual forward composition
but the RHS reverse composition is much better for category theory, since it
follows arrows from source to destination. It is also the most familiar
to those used to OO notation.

@h2 Example: Sets
The easiest example is the category \(\bf Set\) of all sets and all
functions between them.

A smaller example is any collection of sets, together with a
set of functions on them <em>closed</em> under composition
(and including identities for each set of course).


@h2 Example: Types
Related to sets, the category \(\bf Type\) of all types in a decent programming 
language and functions between them.
You can think of a type as a set of values, and a function as the semantics
of the an encoding of a function in the language. Don't confuse the
categorical arrow, however, with the encoding: two distinct encodings
of a function are equal is they have the same semantics.

@h1 Subcategories
A subcategory \(S\) of a category \(K\) is any subset of objects and arrows which
is itself a category. In particular each object must have its identity arrow,
and be closed under composition.

@h2 Example: Discrete category
A category with only identity arrows.

@h2 Example
Let the objects be all sets and draw and arrow from \(A\) to \(B\) if \(A\) is a subset 
of or equal to \(B\). This is a category, and a subcategory of \(\bf Set\), however
without the equality there would be no identity arrows, so proper subset relations
don't form a category.

@h2 Category generated by a graph
For any directed graph \(G\) take the vertices as objects and the
edges as arrows together with an arrow from every vertex to
itself designated the identity for that vertex. Then we can take
the joining of paths as composition, and the result is called the
category generated by the graph.

Note in this example, arrows are not necessarily functions, 
nor are the objects sets or types.

@h2 Example: Strings
A category generated from one a graph with one (irrelevant) object and 
arrows labelled with  letters \(\Sigma\), plus one unlabelled arrow which is the identity,
is the category of words in those letters, with arrow composition being
string concatenation. Usually written (\Sigma^*\).

Any finite automaton, both deterministic and non-deterministic,
generates a subcateory of strings, since it just a graph,
and it follows regular expressions also form a category.



